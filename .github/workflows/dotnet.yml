name: Build Telegram CLI Client

on:
  push:
    branches: [ "main" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rid: [win-x64, linux-x64, osx-x64]
        include:
          - rid: win-x64
            extension: .exe
          - rid: linux-x64
            extension: ''
          - rid: osx-x64
            extension: ''

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --no-restore
    
    - name: Publish
      run: dotnet publish -c Release -r ${{ matrix.rid }} --self-contained true -p:PublishSingleFile=true -p:PublishTrimmed=true -o ./publish/${{ matrix.rid }}
    
    - name: Rename binary
      run: mv ./publish/${{ matrix.rid }}/telegram-cli${{ matrix.extension }} ./publish/${{ matrix.rid }}/telegram-cli-${{ matrix.rid }}${{ matrix.extension }}
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: telegram-cli-${{ matrix.rid }}
        path: ./publish/${{ matrix.rid }}/telegram-cli-${{ matrix.rid }}${{ matrix.extension }}
        
  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts
    
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v1
      with:
        files: ./artifacts/**/*
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
